

***********************************************
*** B E G I N N I N G   S I M U L A T I O N ***
***********************************************


DELETING OLD FILES
MAKING reports DIRECTORY


***********************
*** COMPILING FILES ***
***********************


COMPILING rtl_src/averager.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module averager

Top level modules:
	averager

COMPILING rtl_src/ctrl_2mhz.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module ctrl_2mhz

Top level modules:
	ctrl_2mhz

COMPILING rtl_src/ctrl_50mhz.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module ctrl_50mhz

Top level modules:
	ctrl_50mhz

COMPILING rtl_src/fifo32.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module fifo32

Top level modules:
	fifo32

COMPILING rtl_src/ram_ctr.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module ram_ctr

Top level modules:
	ram_ctr

COMPILING rtl_src/shift_reg.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module shift_reg

Top level modules:
	shift_reg

COMPILING rtl_src/tas.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module tas

Top level modules:
	tas

COMPILING tb.sv
Model Technology ModelSim SE vlog 6.6a Compiler 2010.03 Mar 19 2010
-- Compiling module tb

Top level modules:
	tb


**********************
*** RTL SIMULATION ***
**********************


RTL: SIMULATING tas WITH TESTBENCH
Reading /nfs/guille/a2/rh80apps/mti/6.6a/modeltech/tcl/vsim/pref.tcl 

# 6.6a

# vsim -do dofile -c -quiet -t 1ps tb 
# //  ModelSim SE 6.6a Mar 19 2010 Linux 2.6.32-431.1.2.el6.x86_64
# //
# //  Copyright 1991-2010 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# do dofile 
# sending: a5
# sending: 3a
# sending: 55
# sending: 43
# sending: 3c
# sending: a5
# sending: 0a
# sending: 14
# sending: 1e
# sending: 28
# sending: a5
# sending: 02
# sending: 04
# sending: 06
# sending: 08
# sending: c3
# sending: 0a
# sending: 0c
# sending: 0e
# sending: 10
# sending: a5
# sending: 12
# sending: 14
# sending: 16
# sending: 18
# sending: c3
# sending: 1a
# sending: 1c
# sending: 1e
# write to RAM:: address: 7ff  data:  25 
# 
# sending: 1f
# write to RAM:: address: 7fe  data:  14 
# 
# sending: a5
# sending: 7f
# sending: 7f
# sending: 7f
# write to RAM:: address: 7fd  data:   0 
# 
# sending: 7f
# write to RAM:: address: 7fc  data:   4 
# 
# sending: a5
# sending: 22
# write to RAM:: address: 7fb  data:  31 
# 
# sending: 24
# sending: 26
# sending: 28
# sending: c3
# sending: 2a
# write to RAM:: address: 7fa  data:  10 
# 
# sending: 2c
# write to RAM:: address: 7f9  data:   0 
# 
# sending: 2e
# write to RAM:: address: 7f8  data:   4 
# 
# sending: 30
# write to RAM:: address: 7f7  data:  31 
# 
# sending: a5
# sending: 02
# write to RAM:: address: 7f6  data:  10 
# 
# sending: 04
# sending: 06
# write to RAM:: address: 7f5  data:  51 
# 
# sending: 08
# sending: 83
# sending: a5
# sending: c3
# sending: a5
# write to RAM:: address: 7f4  data:   4 
# 
# sending: c3
# write to RAM:: address: 7f3  data:  31 
# 
# sending: a5
# sending: 12
# write to RAM:: address: 7f2  data:  10 
# 
# sending: 14
# write to RAM:: address: 7f1  data:   4 
# 
# sending: 16
# sending: 18
# sending: c1
# sending: a5
# sending: a5
# write to RAM:: address: 7f0  data:   4 
# 
# write to RAM:: address: 7ef  data:  31 
# 
# sending: c3
# write to RAM:: address: 7ee  data:  10 
# 
# sending: c3
# write to RAM:: address: 7ed  data:   4 
# 
# sending: a1
# sending: a5
# sending: c3
# sending: c3
# sending: a5
# sending: a5
# sending: 22
# sending: 24
# sending: 26
# sending: 28
# sending: c6
# sending: c3
# sending: a5
# sending: 46
# sending: 48
# sending: c2
# sending: a5
# sending: c3
# sending: a5
# sending: c3
# write to RAM:: address: 7ec  data:  31 
# 
# write to RAM:: address: 7eb  data:  10 
# 
# write to RAM:: address: 7ea  data:   4 
# 
# write to RAM:: address: 7e9  data:   4 
# 

RTL: COMPARING output_data_rtl WITH golden_data...

RTL: OUTPUT FILES NOT IDENTICAL. FAILURE!
